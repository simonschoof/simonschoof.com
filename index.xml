<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Schoof</title><link>https://simonschoof.com/</link><description>Recent content on Simon Schoof</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://simonschoof.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Mastodon on AWS: Running on AWS</title><link>https://simonschoof.com/post/mastodon-on-aws-setup/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/mastodon-on-aws-setup/</guid><description>&lt;p>This post is the second part of a series of two articles on deploying and running a &lt;a href=https://docs.joinmastodon.org/
 
 rel="noopener noreferrer"
>Mastodon&lt;/a> instance on &lt;a href=https://aws.amazon.com/
 
 rel="noopener noreferrer"
>AWS&lt;/a>. The code for this part can be found &lt;a href=https://github.com/simonschoof/mastodon-aws/tree/main/infrastructure/aws-services
 
 rel="noopener noreferrer"
>here&lt;/a>. In this second part we will cover the steps to run Mastodon on AWS with ECS and Fargate.&lt;/p></description></item><item><title>Mastodon on AWS: Running locally</title><link>https://simonschoof.com/post/mastodon-on-aws-local-docker/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/mastodon-on-aws-local-docker/</guid><description>&lt;p>This post is the first part of a series of two articles about running a &lt;a href=https://joinmastodon.org/
 
 rel="noopener noreferrer"
>Mastodon&lt;/a> instance on AWS with ECS and Fargate. To familiarize myself with Mastodon and its configuration, I decided to first run Mastodon locally using &lt;a href=https://docs.docker.com/compose/
 
 rel="noopener noreferrer"
>Docker Compose&lt;/a>.
This post will describe the steps to run Mastodon locally with Docker Compose. The second part will cover the steps to run Mastodon on AWS using ECS and Fargate.
The code for this part can be found &lt;a href=https://github.com/simonschoof/mastodon-aws
 
 rel="noopener noreferrer"
>here&lt;/a>.&lt;/p></description></item><item><title>Pulumi, CloudFront &amp; Lambda@Edge: Deployment</title><link>https://simonschoof.com/post/cloudfront-lambda-edge-deployment/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/cloudfront-lambda-edge-deployment/</guid><description>&lt;p>This post is part of a small series of articles on using Pulumi to leverage CloudFront and Lambda@Edge for on the fly image resizing. The code for this part can be found &lt;a href=https://github.com/simonschoof/lambda-at-edge-example/tree/main/pulumi-identity-federation
 
 rel="noopener noreferrer"
>here&lt;/a> and &lt;a href=https://github.com/simonschoof/lambda-at-edge-example/tree/main/.github/workflows
 
 rel="noopener noreferrer"
>here&lt;/a>.&lt;/p></description></item><item><title>Pulumi, CloudFront &amp; Lambda@Edge: Lambda</title><link>https://simonschoof.com/post/cloudfront-lambda-edge-lambda-functions/</link><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/cloudfront-lambda-edge-lambda-functions/</guid><description>&lt;p>This post is part of a small series of articles on using Pulumi to leverage CloudFront and Lambda@Edge for on the fly image resizing. The code for this part can be found &lt;a href=https://github.com/simonschoof/lambda-at-edge-example/tree/main/lambda
 
 rel="noopener noreferrer"
>here&lt;/a>.&lt;/p></description></item><item><title>Pulumi, CloudFront &amp; Lambda@Edge: Infrastructure</title><link>https://simonschoof.com/post/cloudfront-lambda-edge-infrastructure/</link><pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/cloudfront-lambda-edge-infrastructure/</guid><description>&lt;p>This post is part of a small series of articles on using Pulumi to leverage CloudFront and Lambda@Edge for on the fly image resizing. The code for this part can be found &lt;a href=https://github.com/simonschoof/lambda-at-edge-example/tree/main/pulumi
 
 rel="noopener noreferrer"
>here&lt;/a>.&lt;/p></description></item><item><title>Pulumi, CloudFront &amp; Lambda@Edge: Introduction</title><link>https://simonschoof.com/post/cloudfront-lambda-edge-intro/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/cloudfront-lambda-edge-intro/</guid><description>&lt;p>After writing my &lt;a href=https://simonschoof.com/post/first-steps-fsharp/
 
 
>first article about my first steps in F#&lt;/a>, I thought about what project I would like to tackle next. I decided to continue with &lt;a href=https://fsharp.org/
 
 rel="noopener noreferrer"
>F#&lt;/a>, but in a different environment. I want to use F# with &lt;a href=https://www.pulumi.com/
 
 rel="noopener noreferrer"
>Pulumi&lt;/a> to set up &lt;a href=https://aws.amazon.com/blogs/networking-and-content-delivery/resizing-images-with-amazon-cloudfront-lambdaedge-aws-cdn-blog/
 
 rel="noopener noreferrer"
>CloudFront and Lambda@Edge to resize images on the fly&lt;/a>.&lt;/p></description></item><item><title>First Steps in F#</title><link>https://simonschoof.com/post/first-steps-fsharp/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/first-steps-fsharp/</guid><description>&lt;p>I have wanted to dive into functional programming for a long time now. In my first job as a professional developer, I developed with C# and .NET, and I&amp;rsquo;m still a fan of C# and .NET. Especially after &lt;a href=https://devblogs.microsoft.com/dotnet/announcing-net-core-1-0/
 
 rel="noopener noreferrer"
>.NET officially set its sights on the Linux ecosystem in 2016&lt;/a>. I also have a bias towards &lt;a href=https://en.wikipedia.org/wiki/Type_system#Static_type_checking
 
 rel="noopener noreferrer"
>statically typed languages&lt;/a> with &lt;a href=https://en.wikipedia.org/wiki/Type_inference
 
 rel="noopener noreferrer"
>type inference&lt;/a>. With this in mind, it was natural for me to choose F# as the language for my first steps into functional programming.&lt;/p></description></item><item><title>About</title><link>https://simonschoof.com/about/</link><pubDate>Thu, 23 Apr 2020 19:57:09 +0530</pubDate><guid>https://simonschoof.com/about/</guid><description>&lt;h2 id="moin-moin">Moin Moin&lt;/h2>
&lt;p>and welcome! I am Simon and this is my website.&lt;/p>
&lt;p>I was born in Bremen and now live and work as a software developer in Hamburg.&lt;/p></description></item><item><title>Imprint</title><link>https://simonschoof.com/imprint/</link><pubDate>Thu, 23 Apr 2020 19:57:09 +0530</pubDate><guid>https://simonschoof.com/imprint/</guid><description>&lt;h2 id="imprint">Imprint&lt;/h2>
&lt;p>&lt;strong>Legal Disclosure&lt;/strong>&lt;/p>
&lt;p>Information in accordance with Section 5 TMG&lt;/p>
&lt;p>Simon Schoof&lt;/p>
&lt;p>c/o AutorenServices.de&lt;/p>
&lt;p>Birkenallee 24&lt;/p>
&lt;p>36037 Fulda&lt;/p>
&lt;p>&lt;strong>Contact Information&lt;/strong>&lt;/p></description></item><item><title>Privacy</title><link>https://simonschoof.com/privacy/</link><pubDate>Thu, 23 Apr 2020 19:57:09 +0530</pubDate><guid>https://simonschoof.com/privacy/</guid><description>&lt;h2 id="privacy-policy">Privacy Policy&lt;/h2>
&lt;h2 id="privacy-policy-1">Privacy Policy&lt;/h2>
&lt;p>We are very delighted that you have shown interest in our enterprise. Data protection is of a particularly high priority for the management of the simonschoof.com. The use of the Internet pages of the simonschoof.com is possible without any indication of personal data; however, if a data subject wants to use special enterprise services via our website, processing of personal data could become necessary. If the processing of personal data is necessary and there is no statutory basis for such processing, we generally obtain consent from the data subject.&lt;/p></description></item></channel></rss>