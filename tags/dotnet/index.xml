<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dotnet on Simon Schoof</title><link>https://simonschoof.com/tags/dotnet/</link><description>Recent content in Dotnet on Simon Schoof</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 06 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://simonschoof.com/tags/dotnet/index.xml" rel="self" type="application/rss+xml"/><item><title>First Steps in F#</title><link>https://simonschoof.com/post/first-steps-fsharp/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://simonschoof.com/post/first-steps-fsharp/</guid><description>&lt;p>I have wanted to dive into functional programming for a long time now. In my first job as a professional developer, I developed with C# and .NET, and I&amp;rsquo;m still a fan of C# and .NET. Especially after &lt;a href=https://devblogs.microsoft.com/dotnet/announcing-net-core-1-0/
 
 rel="noopener noreferrer"
>.NET officially set its sights on the Linux ecosystem in 2016&lt;/a>. I also have a bias towards &lt;a href=https://en.wikipedia.org/wiki/Type_system#Static_type_checking
 
 rel="noopener noreferrer"
>statically typed languages&lt;/a> with &lt;a href=https://en.wikipedia.org/wiki/Type_inference
 
 rel="noopener noreferrer"
>type inference&lt;/a>. With this in mind, it was natural for me to choose F# as the language for my first steps into functional programming.&lt;/p></description></item></channel></rss>